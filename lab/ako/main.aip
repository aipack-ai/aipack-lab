# Before All

```lua
local p_utils = require("prompt_utils")

print("starting ... ")
-- Get the first input (optional name of the config file) or nil
local input = inputs and inputs[1] or nil

-- The input is the eventual config path
local init_res = p_utils.init_config(input)

if init_res.type == "message" then
  print(init_res.data)
  return {
    init_res = init_res
  }
end

if init_res.type == "config" then
  local config = init_res.data
  -- The design is that each sub agent are independent and rebuild the config 
  -- from the eventual config path
  aip.agent.run("slim", {inputs = { config.config_path } })
  
  aip.agent.run("augment", {inputs = { config.config_path } })

  aip.agent.run("llms", {inputs = { config.config_path } })

else 
  print("init response unknown", init_res)
end


-- return aip.flow.before_all_response({
--   before_all = { "one", "two" }
-- })

```


# After All

```lua
-- print("slim agent\n50 files slimmed")
-- 
-- print("agument agent\n[ ] [ ] [ ]")
-- 
-- print("before_all",before_all)

print("All Done")

return "Done"

```